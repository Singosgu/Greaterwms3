name: Nuitka Build

on:
  push:
    branches:
      - main

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:

      # Check-out repository
      - uses: actions/checkout@v4

      # Setup Python
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11 # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Executable with Nuitka (Windows)
        if: runner.os == 'Windows'
        run: |
          $env:DJANGO_SETTINGS_MODULE="bomiot.server.server.settings"
          $env:RUN_MAIN="true"
          $env:PYTHONPATH="$env:PYTHONPATH;."
          $env:PYTHONIOENCODING="utf-8"
          
      - name: Build Executable with Nuitka (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          export DJANGO_SETTINGS_MODULE="bomiot.server.server.settings"
          export RUN_MAIN="true"
          export PYTHONPATH="${{ github.workspace }}:${PYTHONPATH}"
          export PYTHONIOENCODING="utf-8"
          
      - name: Debug Environment
        run: |
          echo "PYTHONPATH: $env:PYTHONPATH"
          echo "DJANGO_SETTINGS_MODULE: $env:DJANGO_SETTINGS_MODULE"
          python -c "import sys; print('Python path:', sys.path)"
          python -c "import os; print('Django settings:', os.getenv('DJANGO_SETTINGS_MODULE'))"
          python -c "from bomiot.server.server import settings; print('Settings loaded:', settings.__file__)"
        if: runner.os == 'Windows'

      # Build python script into a single execute or app folder (macOS)
      - uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: launcher.py
          mode: standalone

          # Windows 相关参数，Nuitka-Action 会自动在非 Windows 系统上忽略它们
          windows-icon-from-ico: logo.ico
          
          # 包含的数据目录
          include-data-dir: |
            dbs=dbs
            logs=logs
            main=main
            
          # 包含的包
          include-package: |
            django
            orjson
            uvicorn
            pandas
            openpyxl
            watchdog
            tomlkit
            psutil
            xlsxwriter
            requests
            httptools
            aiofiles
            starlette
            tufup
            securesystemslib
            cryptography
            
          # 包含的模块
          include-module: |
            bomiot
            django.core.management
          
            
          # 特殊模块参数，用于 Django
          module-parameter: django-settings-module=bomiot.server.server.settings

          disable-cache: true
          
        env:
          DJANGO_SETTINGS_MODULE: "bomiot.server.server.settings"
          RUN_MAIN: "true"
          PYTHONPATH: "${{ github.workspace }};${{ github.workspace }}/bomiot"
          PYTHONIOENCODING: "utf-8"

      # Uploads artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Build
          path: |
            build/*.exe
            build/*.bin
            build/*.app/**/*
            build/*.dist/**/*
          include-hidden-files: true