name: Nuitka Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Prepare build environment and run Nuitka
      # 使用 Bash 语法处理所有非 Windows 系统
      if: runner.os != 'Windows'
      run: |
        python -m pip install --upgrade pip
        pip install nuitka
        pip install -r requirements.txt
        # 确保 Nuitka 能够找到你的项目根目录
        export PYTHONPATH="${{ github.workspace }}:${PYTHONPATH}"
        # 在该会话中设置 Django 环境变量
        export DJANGO_SETTINGS_MODULE="bomiot.server.server.settings"
        export RUN_MAIN="true"
        export PYTHONIOENCODING="utf-8"
        # 确保所需的数据目录和文件存在
        mkdir -p dbs logs main
        touch logo.ico setup.ini
        # 运行打包脚本
      shell: bash

    - name: Prepare build environment and run Nuitka (Windows)
      # 使用 PowerShell 语法处理 Windows 系统
      if: runner.os == 'Windows'
      run: |
        python -m pip install --upgrade pip
        pip install nuitka
        pip install -r requirements.txt
        # 在该会话中设置环境变量
        $env:PYTHONPATH="$env:PYTHONPATH;."
        $env:DJANGO_SETTINGS_MODULE="bomiot.server.server.settings"
        $env:RUN_MAIN="true"
        $env:PYTHONIOENCODING="utf-8"
        # 确保所需的数据目录和文件存在
        'dbs', 'logs', 'main' | ForEach-Object { mkdir $_ -Force }
        touch logo.ico setup.ini
        # 运行打包脚本
      shell: pwsh

    - name: Build Executable with Nuitka
      # 使用 Nuitka-Action 来代替手动调用 build.py
      uses: Nuitka/Nuitka-Action@main
      with:
        # 主启动脚本，来自 launcher.py
        nuitka-version: main
        script-name: launcher.py
        
        # 将 build.py 中的所有参数转换为 Action 参数
        mode: standalone
        jobs: 16
        clean-cache: all
        assume-yes-for-downloads: true
        remove-output: true
        no-pyi-file: true
        output-dir: dist
        output-filename: bomiot
        lto: yes
        
        # Windows 相关参数，Nuitka-Action 会自动在非 Windows 系统上忽略它们
        windows-company-name: Bomiot
        windows-product-name: Bomiot
        windows-file-version: 1.0.0
        windows-product-version: 1.0.0
        windows-icon-from-ico: logo.ico
        
        # 包含的数据目录
        include-data-dir: |
          dbs=dbs
          logs=logs
          main=main
          
        # 包含的数据文件
        include-data-file: setup.ini=setup.ini
        
        # 包含的包
        include-package: |
          django
          orjson
          uvicorn
          pandas
          openpyxl
          watchdog
          tomlkit
          psutil
          xlsxwriter
          requests
          httptools
          aiofiles
          starlette
          tufup
          securesystemslib
          cryptography
          
        # 包含的模块
        include-module: bomiot
          
        # 特殊模块参数，用于 Django
        module-parameter: django-settings-module=bomiot.server.server.settings

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ runner.os }} Build
        path: |
          dist/*.exe
          dist/*.bin
          dist/*.app